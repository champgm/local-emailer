// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Emailer renders correctly 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "center",
      "flex": 1,
      "justifyContent": "flex-start",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "alignSelf": "center",
        "flex": 1,
        "justifyContent": "flex-start",
        "marginTop": 133.4,
      }
    }
  >
    <View
      style={
        Object {
          "flexDirection": "row",
          "justifyContent": "space-between",
          "width": 450,
        }
      }
    >
      <View
        accessibilityLabel="Mac Work"
        accessibilityRole="button"
        accessibilityStates={Array []}
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#007AFF",
                  "fontSize": 18,
                  "padding": 8,
                  "textAlign": "center",
                },
                Object {
                  "color": "#bababa",
                },
              ]
            }
          >
            Mac Work
          </Text>
        </View>
      </View>
      <View
        accessibilityLabel="Mac"
        accessibilityRole="button"
        accessibilityStates={Array []}
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#007AFF",
                  "fontSize": 18,
                  "padding": 8,
                  "textAlign": "center",
                },
                Object {
                  "color": "#5dc672",
                },
              ]
            }
          >
            Mac
          </Text>
        </View>
      </View>
      <View
        accessibilityLabel="Na"
        accessibilityRole="button"
        accessibilityStates={Array []}
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#007AFF",
                  "fontSize": 18,
                  "padding": 8,
                  "textAlign": "center",
                },
                Object {
                  "color": "#bababa",
                },
              ]
            }
          >
            Na
          </Text>
        </View>
      </View>
    </View>
    <View>
      <TextInput
        allowFontScaling={true}
        autoFocus={true}
        onChangeText={[Function]}
        rejectResponderTermination={true}
        style={
          Object {
            "borderWidth": 1,
            "marginTop": 40.019999999999996,
            "width": 525,
          }
        }
        testID="cd7b46a4-2d81-47bf-abc1-7142aba8a7b0"
        underlineColorAndroid="transparent"
      />
    </View>
    <View>
      <TextInput
        allowFontScaling={true}
        multiline={true}
        numberOfLines={8}
        onChangeText={[Function]}
        rejectResponderTermination={true}
        style={
          Object {
            "borderWidth": 1,
            "marginTop": 40.019999999999996,
            "width": 525,
          }
        }
        testID="6b50a3ac-a102-4150-823c-e20d44f0c84d"
        underlineColorAndroid="transparent"
      />
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
          "justifyContent": "space-between",
          "marginTop": 40.019999999999996,
          "width": 525,
        }
      }
    >
      <View
        accessibilityLabel="Clear"
        accessibilityRole="button"
        accessibilityStates={Array []}
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#007AFF",
                  "fontSize": 18,
                  "padding": 8,
                  "textAlign": "center",
                },
                Object {
                  "color": "red",
                },
              ]
            }
          >
            Clear
          </Text>
        </View>
      </View>
      <View
        accessibilityLabel="Send"
        accessibilityRole="button"
        accessibilityStates={Array []}
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="2d8395f6-03a5-4c61-9c3b-595143aec8bf"
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#007AFF",
                  "fontSize": 18,
                  "padding": 8,
                  "textAlign": "center",
                },
                Object {
                  "color": "green",
                },
              ]
            }
          >
            Send
          </Text>
        </View>
      </View>
    </View>
  </View>
</RCTSafeAreaView>
`;
